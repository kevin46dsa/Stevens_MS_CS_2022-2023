/-----------------------------------------\
Q1:For each customer, product and month, count the number of sales transactions that were between the previous and the following month's average sales quantities. For January and December, display <NULL> or 0.
~~~~~~~~~
Query 1 Ans: show this to bhaiya

with 
a as (
SELECT cust, prod, month, ROUND(Avg(quant)) as avg1
FROM sales s
GROUP BY 1,2,3
ORDER BY 1,2,3
),
B as (
SELECT inst1.cust, inst1.prod, inst1.month, inst2.avg1 AS nextMonth
from a inst1, a inst2
where inst1.cust = inst2.cust AND inst1.prod = inst2.prod AND inst1.month = inst2.month-1  
),
C As (
SELECT inst1.cust, inst1.prod, inst1.month, inst2.avg1 AS prevMonth
from a inst1, a inst2
where inst1.cust = inst2.cust AND inst1.prod = inst2.prod AND inst1.month = inst2.month+1  
),

D AS (
SELECT a.cust,a.prod,a.month,a.avg1,B.nextMonth,C.prevMonth
  from a NATURAL FULL JOIN B NATURAL FULL Join C
)


// need to fix this part

SELECT s.cust AS "CUSTOMER", s.prod AS "PRODUCT", s.month AS "MONTH", count(quant) AS "SALES_COUNT_BETWEEN_AVGS"
FROM D , sales s
WHERE s.quant >= prevMonth AND s.quant <= nextMonth
GROUP BY 1,2,3
ORDER BY 1,2,3;
~~~~~~~~~~
Query 1 from git: refrence

SELECT prod, month, Avg(quant) as avg1
Into Qy1
FROM sales s
GROUP BY prod, month
ORDER BY prod, month;

SELECT * FROM Qy1;

SELECT v1.prod, v1.month, v2.avg1 AS next
into Qy2
FROM Qy1 v1, Qy1 v2
WHERE v1.prod = v2.prod AND v1.month = v2.month-1
GROUP BY v1.prod, v1.month, v2.avg1
ORDER BY prod, month;

SELECT v1.prod, v1.month, v2.avg1 AS prev
into Qy3
FROM Qy1 v1, Qy1 v2
WHERE v1.prod = v2.prod AND v1.month = v2.month+1
GROUP BY v1.prod, v1.month, v2.avg1
ORDER BY prod, month;

SELECT * FROM Qy2;

SELECT Qy1.prod, Qy1.month, avg1, prev, next 
into Qy4
FROM Qy1 NATURAL FULL JOIN Qy2 NATURAL FULL JOIN Qy3;

SELECT * FROM Qy4;

SELECT s.prod AS "PRODUCT", s.month AS "MONTH", count(quant) AS "SALES_COUNT_BETWEEN_AVGS"
FROM Qy4, sales s
WHERE s.quant >= prev AND s.quant <= next
GROUP BY s.prod, s.month
ORDER BY s.prod, s.month;


query 1 solved by bhaiya:
with 
Cte1 as( 
  Select cust as customer, prod as product, month, avg(quant) as avgquant 
  from sales
  group BY 1,2,3
  ),
  month_cte as (select distinct cust, prod, month from sales),
--select * from Cte1
cte2 as (
Select s.cust, s.prod, s.month, COALESCE(sum(s.quant), 0) as total_sales
From Cte1 c1 right join sales s on (c1.customer = s.cust and c1.product = s.prod and c1.month = s.month)
Where s.quant 
between (select avgquant from Cte1 where month = s.month-1 and customer = s.cust and product = s.prod) 
and (select avgquant from Cte1 where month = s.month+1 and customer = s.cust and product = s.prod)
--and s.cust = 'Mia' and s.prod = 'Jellies' --and s.month = 3
group by 1 , 2, 3
order by 3)

select m1.cust, m1.prod,m1.month,COALESCE(c2.total_sales, 0) as total_sales from month_cte m1 
left join cte2 c2 on (m1.month = c2.month and m1.cust = c2.cust and m1.prod = c2.prod)
--where m1.cust = 'Mia' and m1.prod = 'Jellies'
order by 1,2,3
------------**********end of query*******************************
select * from sales s where s.cust = 'Mia' and s.prod = 'Jellies' and month = 4 --and quant between 478.54 and 550.36

select cust, prod, month, avg(quant) as avg_q from sales where cust = 'Mia' and prod = 'Jellies' and month = 3 group by 1,2,3 ;
select cust, prod, month, avg(quant) as avg_q from sales where cust = 'Mia' and prod = 'Jellies' and month = 5 group by 1,2,3 ;

/---------------------------------------------\

Query 2: DONE   

WITH 
Cte1 AS
(
    SELECT cust, prod, month, round(avg(quant)) AS AVG
	FROM sales
	GROUP BY 1,2,3
  	order by 1,2,3
), 

beforemonth AS 
(
	SELECT C1.cust, C1.prod, C2.month, C1.AVG AS BEFORE_AVG
	FROM Cte1 C1, Cte1 C2
	WHERE C1.cust = C2.cust AND C1.prod = C2.prod AND C1.month = C2.month-1
	
), 
aftermonth AS 
(
	SELECT C1.cust, C1.prod, C2.month, C1.AVG AS AFTER_AVG
	FROM Cte1 C1, Cte1 C2
	WHERE C1.cust = C2.cust AND C1.prod = C2.prod AND C1.month = C2.month+1
	
), 
originalmonth AS 
(
	SELECT C1.cust, C1.prod, C2.month, C1.AVG AS DURING_AVG
	FROM Cte1 C1, Cte1 C2
	WHERE C1.cust = C2.cust AND C1.prod = C2.prod AND C1.month = C2.month

), 
before_merge AS 
(
	SELECT C1.cust, C1.prod, C1.month, BEFORE_AVG
	FROM Cte1 C1 LEFT JOIN beforemonth C2
	ON C1.cust = C2.cust AND C1.prod = C2.prod AND C1.month = C2.month
), 

after_merge AS 
(
	SELECT C1.cust, C1.prod, C1.month, AFTER_AVG
	FROM Cte1 C1 LEFT JOIN aftermonth C4
	ON C1.cust = C4.cust AND C1.prod = C4.prod AND C1.month = C4.month
),
during_merge AS 
(
	SELECT C1.cust, C1.prod, C1.month, DURING_AVG
	FROM Cte1 C1 LEFT JOIN originalmonth C3
	ON C1.cust = C3.cust AND C1.prod = C3.prod AND C1.month = C3.month
) 
SELECT CteBM.cust AS "CUSTOMER", CteBM.prod AS "PRODUCT", CteBM.month AS "MONTH", CteBM.BEFORE_AVG, CteDM.DURING_AVG, CteAM.AFTER_AVG
FROM before_merge CteBM, after_merge CteAM, during_merge CteDM
WHERE CteBM.cust = CteAM.cust AND CteBM.prod = CteAM.prod AND CteBM.month = CteAM.month
AND CteBM.cust = CteDM.cust AND CteBM.prod = CteDM.prod AND CteBM.month = CteDM.MONTH

/---------------------------------------------\
Query 3: Need to Edit

WITH tbl_avg_cust AS 
(
	SELECT cust, prod, state, count(quant) AS C1, sum(quant) AS S1, round(avg(quant),0) AS CUST_AVG
	FROM sales
	GROUP BY cust, prod, state
	
), tbl_other_state AS
(
	SELECT cust, prod, count(quant) AS C2, sum(quant) AS S2
	FROM sales
	GROUP BY cust, prod
		
), tbl_other_product AS
(
	SELECT cust, state, count(quant) AS C3, sum(quant) AS S3, round(avg(quant),0) AS PROD_AVG
	FROM sales
	GROUP BY cust, state
)
SELECT t1.cust AS "CUSTOMER", t1.prod AS "PRODUCT", t1.state AS "STATE", PROD_AVG AS "PROD_AVG", (S3-S1)/(C3-C1) AS "OTHER_CUST_AVG", (S3-S1)/(C3-C1) AS "OTHER_PROD_AVG"
FROM tbl_avg_cust t1, tbl_other_state t2, tbl_other_product t3
WHERE t1.cust = t2.cust AND t1.prod = t2.prod AND t1.cust = t3.cust AND t1.state = t3.state


Compiled using Github as refrence:

with 
Temp1 AS(
select cust,prod,state,round(avg(quant)) as cust_avg from sales group by cust,prod,state order by cust
),
 cte4 as(
  select Temp1.cust,Temp1.prod,Temp1.state,round(avg(quant)) as other_state_avg 
   from Temp1,sales 
 where Temp1.prod = sales.prod and Temp1.cust = sales.cust and Temp1.state != sales.state
group by Temp1.cust,Temp1.prod,Temp1.state 
   order by Temp1.cust),
  cte3 AS
(select Temp1.cust,Temp1.prod,Temp1.state,round(avg(quant)) as other_prod_avg 
 from Temp1,sales 
 where Temp1.prod != sales.prod and Temp1.cust = sales.cust and Temp1.state = sales.state
group by Temp1.cust,Temp1.prod,Temp1.state order by Temp1.cust),
cte2 AS
(select Temp1.cust,Temp1.prod,Temp1.state,round(avg(quant)) as other_cust_avg
 from Temp1,sales 
 where Temp1.prod = sales.prod and Temp1.cust != sales.cust and Temp1.state = sales.state
group by Temp1.cust,Temp1.prod,Temp1.state order by Temp1.cust)

select * from(Temp1 natural full outer join cte2 natural full outer join cte3 natural full outer join cte4)
order by cust,prod

/---------------------------------------------\
Query 4: solved by bhaiya

with cte1 as (
  select distinct cust, state from sales where state = 'NJ'
)
------start
select DISTINCT s1.cust, s1.quant, s1.prod, s1.date
from sales s1
where s1.quant in (SELECT distinct quant from sales where cust = s1.cust 
                   and state = 'NJ' order by quant desc limit 3)
--and s1.cust = 'Mia'
and s1.state = 'NJ'
order by 1, 2 desc

----- end
select * from sales where cust = 'Chae' and state = 'NJ' order by quant desc

/---------------------------------------------\
Query 5: DONE

WITH 
Cte1 AS
(	
  SELECT cust,prod,month, ROUND(sum(quant))as sale
	FROM sales
	GROUP BY 1,2,3
), 
Cte2 AS
(
  SELECT c1.cust, c1.prod, c1.month, sum(c2.sale) as totalSale
 FROM Cte1 c1, Cte1 c2
 WHERE c1.cust = c2.cust AND c1.prod = c2.prod AND c1.month = c2.month
 GROUP BY 1,2,3
 ), 
 Cte3 AS
 (	
   SELECT cust, prod, ROUND(SUM(sale)/3)As By_3_Sales
 	FROM Cte1
 	GROUP BY 1,2
 )
 
 
SELECT c1.cust As "CUSTOMER", c1.prod AS "PRODUCT", min(c1.month) AS "1/3 PURCHASED BY MONTH" 
FROM Cte2 c1, Cte3 c2
where c1.cust = c2.cust AND c1.prod = c2.prod 
GROUP BY 1,2